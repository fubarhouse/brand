<?php

/**
 * Implements hook_views_api().
 *
 * @inheritdoc
 */
function brand_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'brand') . '/lib/views',
  );
}

/**
 * Get the Brand machine name for the current entity/path.
 *
 * @return array
 *   An array of machine names associated
 *   to the current entity or path.
 */
function brand_get_machine_name() : array {
  $results = array();
  $weight = 20;
  $output = array();
  if (path_is_admin(current_path())) {
    return array();
  }
  $brands = new Brands(NULL, TRUE);
  foreach ($brands::$Brands as $Brand) {

    if ($node = menu_get_object()) {
      $nid = (int)$node->nid;

      // Book.
      if (module_exists('book')) {
        if (isset($node->book['bid'])) {
          if ((int)$node->book['bid'] === (int)$Brand->bid) {
            $results[$Brand->machine_name] = $Brand->machine_name;
          }
        }

        // Nodes.
        if (module_exists('node')) {
          $delimiter = preg_split('/\s+/', $Brand->path_visibility);

          foreach ($delimiter as $node_target) {

            // Look for "node/xxx" in the path_visibility field:
            if (FALSE !== strpos($node_target, "node/{$nid}", 0)) {
              $results[$Brand->machine_name] = $Brand->machine_name;
            }

            // Check if the current node alias is the node target.
            elseif ($node_target === current_path()) {
              $results[$Brand->machine_name] = $Brand->machine_name;
            }

            // Check if the current node path matches the node target.
            elseif (drupal_match_path(current_path(), $node_target)) {
              $results[$Brand->machine_name] = $Brand->machine_name;
            }

            // Check if the current node alias matches the node target.
            elseif (drupal_match_path(drupal_get_path_alias(), $node_target)) {
              $results[$Brand->machine_name] = $Brand->machine_name;
            }
          }
        }
      }

      // Taxonomy.
      if (module_exists('taxonomy')) {
        foreach ((array)field_info_instances('node', $node->type) as $field_name => $info) {
          foreach ((array)field_get_items('node', $node, $field_name) as $item) {
            if (is_array($item) && !empty($item['tid']) && (int)$Brand->tid === (int)$item['tid']) {
              $results[$Brand->machine_name] = $Brand->machine_name;
            }
          }
        }
      }
    }

    // Paths.
    $delimiter = preg_split('/\s+/', $Brand->path_visibility);
    foreach ($delimiter as $path_target) {
      $path_target = trim($path_target);
      if (!empty(trim($path_target))) {
        if (isset($_GET['destination']) && drupal_match_path($_GET['destination'], $path_target)) {
          $results[$Brand->machine_name] = $Brand->machine_name;
        } elseif (isset($_GET['q']) && drupal_match_path($_GET['q'], $path_target)) {
          $results[$Brand->machine_name] = $Brand->machine_name;
        }
      }
    }
  }

  ksort($results);
  return $results;
}

/**
 * hook_brand_alter
 *
 * @inheritdoc
 */
function validation_brand_alter(&$variables) {
    $variables['machine_name'] = 'hhhddd';
}

/**
 * Implements hook_custom_theme().
 *
 * @inheritdoc
 */
function brand_custom_theme()  {
  $theme = variable_get('theme_default', NULL);
  $machine_names = brand_get_machine_name();
  $weight = 20;
  foreach ($machine_names as $machine_name) {
    $brand = new Brand($machine_name);
    if ($brand->Check() === TRUE) {
      if (NULL !== $brand::$Brand->theme && $brand::$Brand->theme !== '' && $brand::$Brand->theme !== 'none') {
        if ((int) $brand::$Brand->weight < $weight) {
          $b = $brand::$Brand;
          $theme = $brand::$Brand->theme;
          $weight = $brand::$Brand->weight;
        }
      }
    }
  }
  return $theme;
}

/**
 * Implements hook_menu().
 *
 * @inheritdoc
 */
function brand_menu() {
  $items = array();

  $items['admin/config/user-interface/brands/add'] = array(
    'title' => 'New Brand',
    'description' => '',
    'type' => MENU_LOCAL_ACTION,
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('brand_add_form'),
    'access callback' => 'user_access',
    'access arguments' => array('brand creation'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
//  $items['admin/config/user-interface/brands/%'] = array(
//    'title' => 'Brand Administration',
//    'description' => 'The administration page for a single brand.',
//    'access callback' => 'user_access',
//    'access arguments' => array('brand visibility'),
//  );
  $items['admin/config/user-interface/brands/%/add'] = array(
    'title' => 'Add',
    'type' => MENU_LOCAL_ACTION,
    'description' => 'Add a new entry into an existing brand',
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('brand_edit_form'),
    'access callback' => 'user_access',
    'access arguments' => array('brand creation'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/user-interface/brands/%/delete'] = array(
    'title' => 'Delete this brand',
    'type' => MENU_LOCAL_ACTION,
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('brand_delete_form'),
    'access callback' => 'user_access',
    'access arguments' => array('brand removal'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/user-interface/brands/%/%'] = array(
    'title' => 'View',
    'description' => 'Have a look at one entry of an existing brand.',
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('brand_view_form'),
    'access callback' => 'user_access',
    'access arguments' => array('brand visibility'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/user-interface/brands/%/%/delete'] = array(
    'title' => 'Delete this entry',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('brand_delete_form'),
    'access callback' => 'user_access',
    'access arguments' => array('brand removal'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $Brands = new Brands(NULL, TRUE);
  foreach ($Brands::$Brands as $brand) {
    $items["admin/config/user-interface/brands/{$brand->machine_name}"] = array(
      'title' => "{$brand->title}",
      'description' => "The main Brand page for the {$brand->machine_name} Brand.",
      'access callback' => 'user_access',
      'access arguments' => array('brand visibility'),
    );
  }

  return $items;
}

/**
 * Implements hook_permission().
 *
 * @inheritdoc
 */
function brand_permission() {
  return array(
    'brand creation' => array(
      'title' => t('create new brands and brand entries'),
      'description' => t('Access and submit forms which add information into the Brand module table.'),
    ),
    'brand removal' => array(
      'title' => t('remove brands and brand entries'),
      'description' => t('Access and submit forms which remove information from the Brand module table.'),
    ),
    'brand visibility' => array(
      'title' => t('view brands and brand entries'),
      'description' => t('Access and submit forms which add information into the Brand module table.'),
    ),
  );
}

/**
 * Implements hook_init().
 *
 * @inheritdoc
 */
function brand_init() {
  if (path_is_admin(current_path())) {
    module_load_include('inc', 'brand', 'lib/form_common');
    module_load_include('inc', 'brand', 'lib/form_add');
    module_load_include('inc', 'brand', 'lib/form_delete');
    module_load_include('inc', 'brand', 'lib/form_edit');
    module_load_include('inc', 'brand', 'lib/form_view');
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * @inheritdoc
 */
function brand_views_pre_render(&$view) {
  if ($view->name === 'brands') {
    $arguments = array();
    $newset = array();
    if (isset($_GET['q'])) {
      $arguments = explode('/', $_GET['q']);
    }
    if (isset($_GET['q']) && isset($arguments[4])) {
      foreach ($view->result as $result) {
        if ($result->brand_machine_name === $arguments[4]) {
          $newset[$result->brand_date_created] = $result;
        }
      }
    }
    elseif ($_GET['q'] === 'admin/config/user-interface/brands') {
      foreach ($view->result as $result) {
        $newset[$result->brand_machine_name] = $result;
      }
    }
    $view->result = $newset;
  }
}

/**
 * Implements hook_views_default_views().
 *
 * @inheritdoc
 */
function brand_views_default_views() {

  $view = new view();
  $view->name = 'brands';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'brand';
  $view->human_name = 'Brands';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Brands';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'brand visibility';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'none';
  $handler->display->display_options['style_plugin'] = 'table';
  /* Field: UNIX Timestamp */
  $handler->display->display_options['fields']['date_created_1']['id'] = 'date_created_1';
  $handler->display->display_options['fields']['date_created_1']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created_1']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created_1']['ui_name'] = 'UNIX Timestamp';
  $handler->display->display_options['fields']['date_created_1']['label'] = '';
  $handler->display->display_options['fields']['date_created_1']['exclude'] = TRUE;
  $handler->display->display_options['fields']['date_created_1']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['date_created_1']['date_format'] = 'custom';
  $handler->display->display_options['fields']['date_created_1']['custom_date_format'] = 'U';
  $handler->display->display_options['fields']['date_created_1']['second_date_format'] = 'rss';
  /* Field: Brand: Machine name */
  $handler->display->display_options['fields']['machine_name']['id'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['table'] = 'brand';
  $handler->display->display_options['fields']['machine_name']['field'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['label'] = '';
  $handler->display->display_options['fields']['machine_name']['exclude'] = TRUE;
  $handler->display->display_options['fields']['machine_name']['element_label_colon'] = FALSE;
  /* Field: Brand: Name */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'brand';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['text'] = '[title]';
  $handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['path'] = 'admin/config/user-interface/brands/[machine_name]';
  /* Field: Brand: Date of creation */
  $handler->display->display_options['fields']['date_created']['id'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['label'] = 'Updated';
  $handler->display->display_options['fields']['date_created']['date_format'] = 'short';
  $handler->display->display_options['fields']['date_created']['second_date_format'] = 'rss';
  /* Field: Brand: Date of start */
  $handler->display->display_options['fields']['date_start']['id'] = 'date_start';
  $handler->display->display_options['fields']['date_start']['table'] = 'brand';
  $handler->display->display_options['fields']['date_start']['field'] = 'date_start';
  $handler->display->display_options['fields']['date_start']['label'] = 'Starts';
  $handler->display->display_options['fields']['date_start']['date_format'] = 'short';
  $handler->display->display_options['fields']['date_start']['second_date_format'] = 'rss';
  /* Field: Brand: Date of finish */
  $handler->display->display_options['fields']['date_finish']['id'] = 'date_finish';
  $handler->display->display_options['fields']['date_finish']['table'] = 'brand';
  $handler->display->display_options['fields']['date_finish']['field'] = 'date_finish';
  $handler->display->display_options['fields']['date_finish']['label'] = 'Finishes';
  $handler->display->display_options['fields']['date_finish']['date_format'] = 'short';
  $handler->display->display_options['fields']['date_finish']['second_date_format'] = 'rss';
  /* Sort criterion: Brand: Date of creation */
  $handler->display->display_options['sorts']['date_created']['id'] = 'date_created';
  $handler->display->display_options['sorts']['date_created']['table'] = 'brand';
  $handler->display->display_options['sorts']['date_created']['field'] = 'date_created';
  $handler->display->display_options['sorts']['date_created']['order'] = 'DESC';

  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['defaults']['empty'] = FALSE;
  /* No results behavior: Global: Unfiltered text */
  $handler->display->display_options['empty']['area_text_custom']['id'] = 'area_text_custom';
  $handler->display->display_options['empty']['area_text_custom']['table'] = 'views';
  $handler->display->display_options['empty']['area_text_custom']['field'] = 'area_text_custom';
  $handler->display->display_options['empty']['area_text_custom']['empty'] = TRUE;
  $handler->display->display_options['empty']['area_text_custom']['content'] = '<p>Brands are small sub-themes which have specific logic to expose them during a given duration.</p>
<p>You can apply a brand using various components which make for good structural design, such as books, taxonomy terms or paths.</p>
<p>So why not create one using the link above?</p>';
  $handler->display->display_options['defaults']['fields'] = FALSE;
  /* Field: UNIX Timestamp */
  $handler->display->display_options['fields']['date_created_1']['id'] = 'date_created_1';
  $handler->display->display_options['fields']['date_created_1']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created_1']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created_1']['ui_name'] = 'UNIX Timestamp';
  $handler->display->display_options['fields']['date_created_1']['label'] = '';
  $handler->display->display_options['fields']['date_created_1']['exclude'] = TRUE;
  $handler->display->display_options['fields']['date_created_1']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['date_created_1']['date_format'] = 'custom';
  $handler->display->display_options['fields']['date_created_1']['custom_date_format'] = 'U';
  $handler->display->display_options['fields']['date_created_1']['second_date_format'] = 'rss';
  /* Field: Brand: Machine name */
  $handler->display->display_options['fields']['machine_name']['id'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['table'] = 'brand';
  $handler->display->display_options['fields']['machine_name']['field'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['label'] = '';
  $handler->display->display_options['fields']['machine_name']['exclude'] = TRUE;
  $handler->display->display_options['fields']['machine_name']['element_label_colon'] = FALSE;
  /* Field: Brand: Name */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'brand';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['text'] = '[title]';
  $handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['path'] = 'admin/config/user-interface/brands/[machine_name]';
  /* Field: Brand: Date of creation */
  $handler->display->display_options['fields']['date_created']['id'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['label'] = 'Updated';
  $handler->display->display_options['fields']['date_created']['date_format'] = 'short';
  $handler->display->display_options['fields']['date_created']['second_date_format'] = 'rss';
  $handler->display->display_options['path'] = 'admin/config/user-interface/brands';
  $handler->display->display_options['menu']['type'] = 'normal';
  $handler->display->display_options['menu']['title'] = 'Brands';
  $handler->display->display_options['menu']['description'] = 'Configuration page for brands';
  $handler->display->display_options['menu']['weight'] = '0';
  $handler->display->display_options['menu']['name'] = 'management';
  $handler->display->display_options['menu']['context'] = 0;
  $handler->display->display_options['menu']['context_only_inline'] = 0;

  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page_1');
  $handler->display->display_options['defaults']['fields'] = FALSE;
  /* Field: UNIX Timestamp */
  $handler->display->display_options['fields']['date_created_1']['id'] = 'date_created_1';
  $handler->display->display_options['fields']['date_created_1']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created_1']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created_1']['ui_name'] = 'UNIX Timestamp';
  $handler->display->display_options['fields']['date_created_1']['label'] = '';
  $handler->display->display_options['fields']['date_created_1']['exclude'] = TRUE;
  $handler->display->display_options['fields']['date_created_1']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['date_created_1']['date_format'] = 'custom';
  $handler->display->display_options['fields']['date_created_1']['custom_date_format'] = 'U';
  $handler->display->display_options['fields']['date_created_1']['second_date_format'] = 'rss';
  /* Field: Brand: Machine name */
  $handler->display->display_options['fields']['machine_name']['id'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['table'] = 'brand';
  $handler->display->display_options['fields']['machine_name']['field'] = 'machine_name';
  $handler->display->display_options['fields']['machine_name']['label'] = '';
  $handler->display->display_options['fields']['machine_name']['exclude'] = TRUE;
  $handler->display->display_options['fields']['machine_name']['element_label_colon'] = FALSE;
  /* Field: Brand: Name */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'brand';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['text'] = '[title]';
  $handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['path'] = 'admin/config/user-interface/brands/[machine_name]/[date_created_1]';
  /* Field: Brand: Date of creation */
  $handler->display->display_options['fields']['date_created']['id'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['table'] = 'brand';
  $handler->display->display_options['fields']['date_created']['field'] = 'date_created';
  $handler->display->display_options['fields']['date_created']['label'] = 'Date';
  $handler->display->display_options['fields']['date_created']['date_format'] = 'short';
  $handler->display->display_options['fields']['date_created']['second_date_format'] = 'rss';
  /* Field: Brand: Description */
  $handler->display->display_options['fields']['description']['id'] = 'description';
  $handler->display->display_options['fields']['description']['table'] = 'brand';
  $handler->display->display_options['fields']['description']['field'] = 'description';
  $handler->display->display_options['fields']['description']['label'] = 'Message';
  $handler->display->display_options['defaults']['arguments'] = FALSE;
  /* Contextual filter: Brand: Machine name */
  $handler->display->display_options['arguments']['machine_name']['id'] = 'machine_name';
  $handler->display->display_options['arguments']['machine_name']['table'] = 'brand';
  $handler->display->display_options['arguments']['machine_name']['field'] = 'machine_name';
  $handler->display->display_options['arguments']['machine_name']['default_action'] = 'default';
  $handler->display->display_options['arguments']['machine_name']['default_argument_type'] = 'raw';
  $handler->display->display_options['arguments']['machine_name']['default_argument_options']['index'] = '4';
  $handler->display->display_options['arguments']['machine_name']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['machine_name']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['machine_name']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['machine_name']['limit'] = '0';
  $handler->display->display_options['path'] = 'admin/config/user-interface/brands/%';
  $handler->display->display_options['menu']['title'] = 'Brand dashboard';
  $handler->display->display_options['menu']['weight'] = '0';
  $handler->display->display_options['menu']['context'] = 0;
  $handler->display->display_options['menu']['context_only_inline'] = 0;

  $views[$view->name] = $view;
  return $views;
}